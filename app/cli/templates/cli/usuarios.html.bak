<!-- app/templates/cli/usuarios.html -->
{% extends "base_cliq.html" %}

{% block title %}Gestão de Usuários{% endblock %}

{% block head %}
<style>
    .user-card {
        transition: all 0.3s ease;
        border-left: 4px solid transparent;
    }
    .user-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        border-left-color: #007bff;
    }
    .user-avatar {
        width: 50px;
        height: 50px;
        background: linear-gradient(135deg, #007bff, #0056b3);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-weight: bold;
        font-size: 1.2rem;
    }
    .status-badge {
        font-size: 0.75rem;
    }
</style>
{% endblock %}

{% block content %}
<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="h3 mb-0">
                <i class="fas fa-users text-primary me-2"></i>
                Gestão de Usuários
            </h1>
            <p class="text-muted mb-0">Gerencie usuários e permissões do sistema</p>
        </div>
        <a href="{{ url_for('cli.novo_usuario') }}" class="btn btn-primary">
            <i class="fas fa-plus"></i> Novo Usuário
        </a>
    </div>

    <!-- Estatísticas -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card bg-primary text-white">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-grow-1">
                            <div class="small text-white-50">Total de Usuários</div>
                            <div class="h4 mb-0">{{ stats.total }}</div>
                        </div>
                        <div class="text-white-50">
                            <i class="fas fa-users fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-3">
            <div class="card bg-success text-white">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-grow-1">
                            <div class="small text-white-50">Usuários Ativos</div>
                            <div class="h4 mb-0">{{ stats.ativos }}</div>
                        </div>
                        <div class="text-white-50">
                            <i class="fas fa-user-check fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-3">
            <div class="card bg-info text-white">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-grow-1">
                            <div class="small text-white-50">Auditores</div>
                            <div class="h4 mb-0">{{ stats.auditores }}</div>
                        </div>
                        <div class="text-white-50">
                            <i class="fas fa-clipboard-check fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-3">
            <div class="card bg-warning text-white">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-grow-1">
                            <div class="small text-white-50">Gestores</div>
                            <div class="h4 mb-0">{{ stats.gestores }}</div>
                        </div>
                        <div class="text-white-50">
                            <i class="fas fa-user-tie fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Filtros -->
    <div class="card mb-4">
        <div class="card-body">
            <div class="row">
                <div class="col-md-4">
                    <input type="text" class="form-control" placeholder="Buscar usuários..." 
                           id="filtroNome" onkeyup="filtrarUsuarios()">
                </div>
                <div class="col-md-3">
                    <select class="form-select" id="filtroTipo" onchange="filtrarUsuarios()">
                        <option value="">Todos os tipos</option>
                        <option value="SUPER_ADMIN">Super Admin</option>
                        <option value="ADMIN_CLIENTE">Admin Cliente</option>
                        <option value="GESTOR">Gestor</option>
                        <option value="AUDITOR">Auditor</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <select class="form-select" id="filtroStatus" onchange="filtrarUsuarios()">
                        <option value="">Todos os status</option>
                        <option value="ativo">Ativos</option>
                        <option value="inativo">Inativos</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <button class="btn btn-outline-secondary w-100" onclick="limparFiltros()">
                        <i class="fas fa-times"></i> Limpar
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Lista de Usuários -->
    <div class="row" id="listaUsuarios">
        {% for usuario in usuarios %}
        <div class="col-md-6 col-lg-4 mb-3 usuario-card" 
             data-nome="{{ usuario.nome.lower() }}" 
             data-tipo="{{ usuario.tipo.value }}" 
             data-status="{% if usuario.ativo %}ativo{% else %}inativo{% endif %}">
            <div class="card user-card h-100">
                <div class="card-body">
                    <div class="d-flex align-items-start">
                        <div class="user-avatar me-3">
                            {{ usuario.nome[0].upper() }}
                        </div>
                        <div class="flex-grow-1">
                            <h6 class="card-title mb-1">{{ usuario.nome }}</h6>
                            <div class="text-muted small mb-2">{{ usuario.email }}</div>
                            
                            <div class="d-flex align-items-center justify-content-between">
                                <div>
                                    <span class="badge bg-secondary status-badge">{{ usuario.tipo.value }}</span>
                                    {% if usuario.ativo %}
                                        <span class="badge bg-success status-badge ms-1">Ativo</span>
                                    {% else %}
                                        <span class="badge bg-danger status-badge ms-1">Inativo</span>
                                    {% endif %}
                                </div>
                                
                                <div class="btn-group btn-group-sm">
                                    <a href="{{ url_for('cli.editar_usuario', usuario_id=usuario.id) }}" 
                                       class="btn btn-outline-primary btn-sm" title="Editar">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <button class="btn btn-outline-danger btn-sm" 
                                            onclick="confirmarExclusao({{ usuario.id }}, '{{ usuario.nome }}')" 
                                            title="Excluir">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </div>
                            </div>
                            
                            {% if usuario.ultimo_login %}
                            <div class="small text-muted mt-2">
                                <i class="fas fa-clock me-1"></i>
                                Último acesso: {{ usuario.ultimo_login.strftime('%d/%m/%Y %H:%M') }}
                            </div>
                            {% endif %}
                        </div>
                    </div>
                </div>
            </div>
        </div>
        {% endfor %}
    </div>
    
    <!-- Mensagem quando não há usuários -->
    <div class="text-center py-5 d-none" id="nenhumUsuario">
        <i class="fas fa-users fa-4x text-muted mb-3"></i>
        <h4 class="text-muted">Nenhum usuário encontrado</h4>
        <p class="text-muted">Ajuste os filtros ou adicione um novo usuário</p>
    </div>
</div>

<!-- Modal de Confirmação -->
<div class="modal fade" id="modalConfirmacao" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fas fa-exclamation-triangle text-warning me-2"></i>
                    Confirmar Exclusão
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Tem certeza que deseja excluir o usuário <strong id="nomeUsuarioExclusao"></strong>?</p>
                <p class="text-danger small">
                    <i class="fas fa-info-circle me-1"></i>
                    Esta ação não pode ser desfeita.
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-danger" id="btnConfirmarExclusao">
                    <i class="fas fa-trash"></i> Excluir
                </button>
            </div>
        </div>
    </div>
</div>

<script>
let usuarioParaExcluir = null;

function filtrarUsuarios() {
    const filtroNome = document.getElementById('filtroNome').value.toLowerCase();
    const filtroTipo = document.getElementById('filtroTipo').value;
    const filtroStatus = document.getElementById('filtroStatus').value;
    
    const usuarios = document.querySelectorAll('.usuario-card');
    let usuariosVisiveis = 0;
    
    usuarios.forEach(usuario => {
        const nome = usuario.dataset.nome;
        const tipo = usuario.dataset.tipo;
        const status = usuario.dataset.status;
        
        const nomeMatch = !filtroNome || nome.includes(filtroNome);
        const tipoMatch = !filtroTipo || tipo === filtroTipo;
        const statusMatch = !filtroStatus || status === filtroStatus;
        
        if (nomeMatch && tipoMatch && statusMatch) {
            usuario.style.display = 'block';
            usuariosVisiveis++;
        } else {
            usuario.style.display = 'none';
        }
    });
    
    // Mostrar/ocultar mensagem de nenhum usuário
    document.getElementById('nenhumUsuario').classList.toggle('d-none', usuariosVisiveis > 0);
}

function limparFiltros() {
    document.getElementById('filtroNome').value = '';
    document.getElementById('filtroTipo').value = '';
    document.getElementById('filtroStatus').value = '';
    filtrarUsuarios();
}

function confirmarExclusao(usuarioId, nomeUsuario) {
    usuarioParaExcluir = usuarioId;
    document.getElementById('nomeUsuarioExclusao').textContent = nomeUsuario;
    
    const modal = new bootstrap.Modal(document.getElementById('modalConfirmacao'));
    modal.show();
}

document.getElementById('btnConfirmarExclusao').addEventListener('click', function() {
    if (usuarioParaExcluir) {
        // Aqui seria feita a requisição para excluir o usuário
        fetch(`/cli/usuario/${usuarioParaExcluir}/excluir`, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json',
            }
        })
        .then(response => {
            if (response.ok) {
                location.reload();
            } else {
                alert('Erro ao excluir usuário');
            }
        })
        .catch(error => {
            console.error('Erro:', error);
            alert('Erro ao excluir usuário');
        });
        
        const modal = bootstrap.Modal.getInstance(document.getElementById('modalConfirmacao'));
        modal.hide();
    }
});
</script>
{% endblock %}

<!-- app/templates/cli/usuario_form.html -->
{% extends "base_cliq.html" %}

{% block title %}{% if usuario %}Editar{% else %}Novo{% endif %} Usuário{% endblock %}

{% block content %}
<div class="container-fluid">
    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-{% if usuario %}edit{% else %}plus{% endif %} text-primary me-2"></i>
                        {% if usuario %}Editar Usuário{% else %}Novo Usuário{% endif %}
                    </h5>
                </div>
                <div class="card-body">
                    <form method="POST" novalidate>
                        <div class="mb-3">
                            <label for="nome" class="form-label">Nome Completo <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="nome" name="nome" 
                                   value="{% if usuario %}{{ usuario.nome }}{% endif %}" required>
                            <div class="invalid-feedback">
                                Por favor, informe o nome completo.
                            </div>
                        </div>
                        
                        <div class="mb-3">
                            <label for="email" class="form-label">E-mail <span class="text-danger">*</span></label>
                            <input type="email" class="form-control" id="email" name="email" 
                                   value="{% if usuario %}{{ usuario.email }}{% endif %}" 
                                   {% if usuario %}readonly{% endif %} required>
                            <div class="invalid-feedback">
                                Por favor, informe um e-mail válido.
                            </div>
                            {% if usuario %}
                            <div class="form-text">O e-mail não pode ser alterado após a criação.</div>
                            {% endif %}
                        </div>
                        
                        <div class="mb-3">
                            <label for="tipo" class="form-label">Tipo de Usuário <span class="text-danger">*</span></label>
                            <select class="form-select" id="tipo" name="tipo" required>
                                <option value="">Selecione...</option>
                                <option value="AUDITOR" {% if usuario and usuario.tipo.value == 'AUDITOR' %}selected{% endif %}>
                                    Auditor - Pode aplicar checklists
                                </option>
                                <option value="GESTOR" {% if usuario and usuario.tipo.value == 'GESTOR' %}selected{% endif %}>
                                    Gestor - Pode visualizar relatórios e gerenciar auditorias
                                </option>
                                <option value="ADMIN_CLIENTE" {% if usuario and usuario.tipo.value == 'ADMIN_CLIENTE' %}selected{% endif %}>
                                    Admin Cliente - Acesso completo às funcionalidades
                                </option>
                            </select>
                            <div class="invalid-feedback">
                                Por favor, selecione o tipo de usuário.
                            </div>
                        </div>
                        
                        {% if usuario %}
                        <div class="mb-3">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="ativo" name="ativo" 
                                       {% if usuario.ativo %}checked{% endif %}>
                                <label class="form-check-label" for="ativo">
                                    Usuário ativo
                                </label>
                            </div>
                            <div class="form-text">Usuários inativos não podem fazer login no sistema.</div>
                        </div>
                        
                        <div class="mb-3">
                            <label for="nova_senha" class="form-label">Nova Senha</label>
                            <input type="password" class="form-control" id="nova_senha" name="nova_senha">
                            <div class="form-text">Deixe em branco para manter a senha atual.</div>
                        </div>
                        {% endif %}
                        
                        <div class="d-flex justify-content-between">
                            <a href="{{ url_for('cli.gerenciar_usuarios') }}" class="btn btn-secondary">
                                <i class="fas fa-arrow-left"></i> Voltar
                            </a>
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save"></i> 
                                {% if usuario %}Atualizar{% else %}Criar{% endif %} Usuário
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
// Validação do formulário
document.querySelector('form').addEventListener('submit', function(event) {
    event.preventDefault();
    event.stopPropagation();
    
    const form = event.target;
    const inputs = form.querySelectorAll('input[required], select[required]');
    let isValid = true;
    
    inputs.forEach(input => {
        if (!input.value.trim()) {
            input.classList.add('is-invalid');
            isValid = false;
        } else {
            input.classList.remove('is-invalid');
            input.classList.add('is-valid');
        }
    });
    
    // Validação específica do email
    const emailInput = form.querySelector('#email');
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (emailInput && !emailRegex.test(emailInput.value)) {
        emailInput.classList.add('is-invalid');
        isValid = false;
    }
    
    if (isValid) {
        form.submit();
    }
});
</script>
{% endblock %}

<!-- app/templates/cli/configuracoes.html -->
{% extends "base_cliq.html" %}

{% block title %}Configurações do Sistema{% endblock %}

{% block head %}
<style>
    .config-section {
        border-left: 4px solid #007bff;
        background: #f8f9fa;
    }
    .color-preview {
        width: 30px;
        height: 30px;
        border-radius: 50%;
        border: 2px solid #ddd;
        cursor: pointer;
    }
    .logo-preview {
        max-width: 200px;
        max-height: 100px;
        border: 2px dashed #ddd;
        padding: 10px;
        border-radius: 8px;
    }
</style>
{% endblock %}

{% block content %}
<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="h3 mb-0">
                <i class="fas fa-cog text-primary me-2"></i>
                Configurações do Sistema
            </h1>
            <p class="text-muted mb-0">Personalize a aparência e comportamento do sistema</p>
        </div>
        <button form="formConfiguracoes" type="submit" class="btn btn-primary">
            <i class="fas fa-save"></i> Salvar Configurações
        </button>
    </div>

    <form id="formConfiguracoes" method="POST" enctype="multipart/form-data">
        <div class="row">
            <!-- Aparência -->
            <div class="col-md-6 mb-4">
                <div class="card config-section">
                    <div class="card-header">
                        <h5 class="card-title mb-0">
                            <i class="fas fa-palette text-primary me-2"></i>
                            Aparência
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="mb-3">
                            <label for="logo" class="form-label">Logo da Empresa</label>
                            <input type="file" class="form-control" id="logo" name="logo" 
                                   accept="image/*" onchange="previewLogo(this)">
                            <div class="form-text">Formatos aceitos: PNG, JPG, SVG (máx. 2MB)</div>
                            
                            <div class="mt-3">
                                {% if config.logo_url %}
                                <img src="{{ config.logo_url }}" class="logo-preview" id="logoPreview">
                                {% else %}
                                <div class="logo-preview d-flex align-items-center justify-content-center text-muted" id="logoPreview">
                                    <i class="fas fa-image fa-2x"></i>
                                </div>
                                {% endif %}
                            </div>
                        </div>
                        
                        <div class="row">
                            <div class="col-md-6">
                                <label for="cor_primaria" class="form-label">Cor Primária</label>
                                <div class="d-flex align-items-center">
                                    <input type="color" class="form-control form-control-color" 
                                           id="cor_primaria" name="cor_primaria" 
                                           value="{{ config.cor_primaria or '#007bff' }}"
                                           onchange="updateColorPreview('primaria', this.value)">
                                    <div class="color-preview ms-2" id="previewPrimaria" 
                                         style="background-color: {{ config.cor_primaria or '#007bff' }}"></div>
                                </div>
                            </div>
                            
                            <div class="col-md-6">
                                <label for="cor_secundaria" class="form-label">Cor Secundária</label>
                                <div class="d-flex align-items-center">
                                    <input type="color" class="form-control form-control-color" 
                                           id="cor_secundaria" name="cor_secundaria" 
                                           value="{{ config.cor_secundaria or '#6c757d' }}"
                                           onchange="updateColorPreview('secundaria', this.value)">
                                    <div class="color-preview ms-2" id="previewSecundaria" 
                                         style="background-color: {{ config.cor_secundaria or '#6c757d' }}"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Funcionalidades -->
            <div class="col-md-6 mb-4">
                <div class="card config-section">
                    <div class="card-header">
                        <h5 class="card-title mb-0">
                            <i class="fas fa-sliders-h text-primary me-2"></i>
                            Funcionalidades
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="form-check form-switch mb-3">
                            <input class="form-check-input" type="checkbox" id="mostrar_notas" 
                                   name="mostrar_notas" {% if config.mostrar_notas %}checked{% endif %}>
                            <label class="form-check-label" for="mostrar_notas">
                                <strong>Mostrar Notas</strong>
                                <div class="small text-muted">Exibir notas numéricas nas auditorias</div>
                            </label>
                        </div>
                        
                        <div class="form-check form-switch mb-3">
                            <input class="form-check-input" type="checkbox" id="permitir_fotos" 
                                   name="permitir_fotos" {% if config.permitir_fotos %}checked{% endif %}>
                            <label class="form-check-label" for="permitir_fotos">
                                <strong>Permitir Fotos</strong>
                                <div class="small text-muted">Habilitar anexo de fotos nas auditorias</div>
                            </label>
                        </div>
                        
                        <div class="form-check form-switch mb-3">
                            <input class="form-check-input" type="checkbox" id="obrigar_plano_acao" 
                                   name="obrigar_plano_acao" {% if config.obrigar_plano_acao %}checked{% endif %}>
                            <label class="form-check-label" for="obrigar_plano_acao">
                                <strong>Obrigar Plano de Ação</strong>
                                <div class="small text-muted">Exigir plano de ação para não-conformidades</div>
                            </label>
                        </div>
                        
                        <div class="form-check form-switch mb-3">
                            <input class="form-check-input" type="checkbox" id="notificacoes_email" 
                                   name="notificacoes_email" {% if config.notificacoes_email %}checked{% endif %}>
                            <label class="form-check-label" for="notificacoes_email">
                                <strong>Notificações por E-mail</strong>
                                <div class="small text-muted">Enviar notificações por e-mail</div>
                            </label>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Configurações Avançadas -->
        <div class="row">
            <div class="col-12">
                <div class="card config-section">
                    <div class="card-header">
                        <h5 class="card-title mb-0">
                            <i class="fas fa-cogs text-primary me-2"></i>
                            Configurações Avançadas
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-4">
                                <label for="tempo_sessao" class="form-label">Tempo de Sessão (minutos)</label>
                                <input type="number" class="form-control" id="tempo_sessao" 
                                       name="tempo_sessao" value="{{ config.tempo_sessao or 120 }}" 
                                       min="30" max="480">
                                <div class="form-text">Tempo limite para manter usuário logado</div>
                            </div>
                            
                            <div class="col-md-4">
                                <label for="backup_automatico" class="form-label">Backup Automático</label>
                                <select class="form-select" id="backup_automatico" name="backup_automatico">
                                    <option value="0">Desabilitado</option>
                                    <option value="1" {% if config.backup_automatico == 1 %}selected{% endif %}>Diário</option>
                                    <option value="7" {% if config.backup_automatico == 7 %}selected{% endif %}>Semanal</option>
                                    <option value="30" {% if config.backup_automatico == 30 %}selected{% endif %}>Mensal</option>
                                </select>
                            </div>
                            
                            <div class="col-md-4">
                                <label for="formato_data" class="form-label">Formato de Data</label>
                                <select class="form-select" id="formato_data" name="formato_data">
                                    <option value="dd/MM/yyyy" {% if config.formato_data == 'dd/MM/yyyy' %}selected{% endif %}>dd/MM/yyyy</option>
                                    <option value="MM/dd/yyyy" {% if config.formato_data == 'MM/dd/yyyy' %}selected{% endif %}>MM/dd/yyyy</option>
                                    <option value="yyyy-MM-dd" {% if config.formato_data == 'yyyy-MM-dd' %}selected{% endif %}>yyyy-MM-dd</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

<script>
function previewLogo(input) {
    const preview = document.getElementById('logoPreview');
    
    if (input.files && input.files[0]) {
        const reader = new FileReader();
        
        reader.onload = function(e) {
            preview.innerHTML = `<img src="${e.target.result}" class="logo-preview">`;
        };
        
        reader.readAsDataURL(input.files[0]);
    }
}

function updateColorPreview(tipo, cor) {
    document.getElementById(`preview${tipo.charAt(0).toUpperCase() + tipo.slice(1)}`).style.backgroundColor = cor;
    
    // Aplicar mudança em tempo real (opcional)
    if (tipo === 'primaria') {
        document.documentElement.style.setProperty('--bs-primary', cor);
    }
}

// Validação do formulário
document.getElementById('formConfiguracoes').addEventListener('submit', function(event) {
    const tempoSessao = document.getElementById('tempo_sessao').value;
    
    if (tempoSessao < 30 || tempoSessao > 480) {
        event.preventDefault();
        alert('O tempo de sessão deve estar entre 30 e 480 minutos.');
        return false;
    }
});

// Confirmar antes de sair se houver mudanças não salvas
let formChanged = false;

document.querySelectorAll('#formConfiguracoes input, #formConfiguracoes select').forEach(element => {
    element.addEventListener('change', () => {
        formChanged = true;
    });
});

window.addEventListener('beforeunload', function(event) {
    if (formChanged) {
        event.preventDefault();
        event.returnValue = 'Você tem alterações não salvas. Deseja realmente sair?';
    }
});

document.getElementById('formConfiguracoes').addEventListener('submit', function() {
    formChanged = false;
});
</script>
{% endblock %}

<!-- app/templates/cli/backup.html -->
{% extends "base_cliq.html" %}

{% block title %}Backup e Importação{% endblock %}

{% block head %}
<style>
    .backup-card {
        border-left: 4px solid #28a745;
        transition: transform 0.2s ease;
    }
    .backup-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(0,0,0,0.1);
    }
    .upload-area {
        border: 2px dashed #ddd;
        border-radius: 10px;
        padding: 40px;
        text-align: center;
        transition: all 0.3s ease;
        cursor: pointer;
    }
    .upload-area:hover {
        border-color: #007bff;
        background-color: #f8f9fa;
    }
    .upload-area.dragover {
        border-color: #28a745;
        background-color: #d4edda;
    }
</style>
{% endblock %}

{% block content %}
<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="h3 mb-0">
                <i class="fas fa-database text-primary me-2"></i>
                Backup e Importação
            </h1>
            <p class="text-muted mb-0">Gerencie backups e importação de dados</p>
        </div>
    </div>

    <div class="row">
        <!-- Backup -->
        <div class="col-md-6 mb-4">
            <div class="card backup-card h-100">
                <div class="card-header bg-success text-white">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-download me-2"></i>
                        Exportar Backup
                    </h5>
                </div>
                <div class="card-body">
                    <p class="card-text">
                        Faça o download de todos os seus dados em formato JSON para backup de segurança.
                    </p>
                    
                    <div class="alert alert-info">
                        <i class="fas fa-info-circle me-2"></i>
                        <strong>O backup inclui:</strong>
                        <ul class="mb-0 mt-2">
                            <li>Todas as lojas e informações</li>
                            <li>Formulários e estruturas de checklists</li>
                            <li>Auditorias dos últimos 6 meses</li>
                            <li>Configurações do sistema</li>
                        </ul>
                    </div>
                    
                    <div class="d-grid">
                        <button class="btn btn-success btn-lg" onclick="gerarBackup()">
                            <i class="fas fa-download me-2"></i>
                            Gerar e Baixar Backup
                        </button>
                    </div>
                    
                    <div id="statusBackup" class="mt-3 d-none">
                        <div class="progress">
                            <div class="progress-bar progress-bar-striped progress-bar-animated" 
                                 style="width: 0%" id="progressBackup"></div>
                        </div>
                        <small class="text-muted mt-1" id="textoStatusBackup">Preparando backup...</small>
                    </div>
                </div>
            </div>
        </div>

        <!-- Importação -->
        <div class="col-md-6 mb-4">
            <div class="card backup-card h-100" style="border-left-color: #007bff;">
                <div class="card-header bg-primary text-white">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-upload me-2"></i>
                        Importar Backup
                    </h5>
                </div>
                <div class="card-body">
                    <p class="card-text">
                        Restaure dados de um arquivo de backup anterior.
                    </p>
                    
                    <form id="formImportacao" method="POST" enctype="multipart/form-data" action="/cli/backup/importar">
                        <div class="upload-area" onclick="document.getElementById('arquivo_backup').click()">
                            <i class="fas fa-cloud-upload-alt fa-3x text-muted mb-3"></i>
                            <h5>Clique para selecionar o arquivo</h5>
                            <p class="text-muted">ou arraste o arquivo de backup aqui</p>
                            <input type="file" id="arquivo_backup" name="arquivo_backup" 
                                   accept=".json" style="display: none" onchange="arquivoSelecionado(this)">
                        </div>
                        
                        <div id="arquivo-info" class="mt-3 d-none">
                            <div class="alert alert-success">
                                <i class="fas fa-file-check me-2"></i>
                                <strong>Arquivo selecionado:</strong>
                                <div id="nome-arquivo" class="mt-1"></div>
                                <div id="tamanho-arquivo" class="small text-muted"></div>
                            </div>
                        </div>
                        
                        <div class="alert alert-warning mt-3">
                            <i class="fas fa-exclamation-triangle me-2"></i>
                            <strong>Atenção:</strong> A importação irá substituir os dados existentes. 
                            Faça um backup atual antes de prosseguir.
                        </div>
                        
                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary btn-lg" id="btnImportar" disabled>
                                <i class="fas fa-upload me-2"></i>
                                Importar Backup
                            </button>
                        </div>
                    </form>
                    
                    <div id="statusImportacao" class="mt-3 d-none">
                        <div class="progress">
                            <div class="progress-bar progress-bar-striped progress-bar-animated" 
                                 style="width: 0%" id="progressImportacao"></div>
                        </div>
                        <small class="text-muted mt-1" id="textoStatusImportacao">Importando dados...</small>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Histórico de Backups -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-history text-primary me-2"></i>
                        Histórico de Operações
                    </h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>Data/Hora</th>
                                    <th>Operação</th>
                                    <th>Usuário</th>
                                    <th>Status</th>
                                    <th>Detalhes</th>
                                </tr>
                            </thead>
                            <tbody id="historicoBackups">
                                <!-- Será preenchido via JavaScript -->
                            </tbody>
                        </table>
                        
                        <div class="text-center text-muted py-3" id="semHistorico">
                            <i class="fas fa-history fa-2x mb-2"></i>
                            <div>Nenhuma operação de backup/importação realizada ainda</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal de Confirmação de Importação -->
<div class="modal fade" id="modalConfirmacaoImportacao" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-warning text-dark">
                <h5 class="modal-title">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    Confirmar Importação
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="alert alert-danger">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    <strong>ATENÇÃO!</strong> Esta operação irá:
                </div>
                
                <ul>
                    <li>Substituir <strong>TODOS</strong> os dados existentes</li>
                    <li>Remover lojas, formulários e auditorias atuais</li>
                    <li>Restaurar dados do arquivo de backup</li>
                    <li>Esta ação <strong>NÃO PODE</strong> ser desfeita</li>
                </ul>
                
                <p class="mb-0">
                    <strong>Tem certeza que deseja continuar?</strong>
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times"></i> Cancelar
                </button>
                <button type="button" class="btn btn-danger" id="confirmarImportacao">
                    <i class="fas fa-upload"></i> Sim, Importar
                </button>
            </div>
        </div>
    </div>
</div>

<script>
// Drag and drop
const uploadArea = document.querySelector('.upload-area');
const fileInput = document.getElementById('arquivo_backup');

['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
    uploadArea.addEventListener(eventName, preventDefaults, false);
});

function preventDefaults(e) {
    e.preventDefault();
    e.stopPropagation();
}

['dragenter', 'dragover'].forEach(eventName => {
    uploadArea.addEventListener(eventName, highlight, false);
});

['dragleave', 'drop'].forEach(eventName => {
    uploadArea.addEventListener(eventName, unhighlight, false);
});

function highlight(e) {
    uploadArea.classList.add('dragover');
}

function unhighlight(e) {
    uploadArea.classList.remove('dragover');
}

uploadArea.addEventListener('drop', handleDrop, false);

function handleDrop(e) {
    const dt = e.dataTransfer;
    const files = dt.files;
    
    if (files.length > 0) {
        fileInput.files = files;
        arquivoSelecionado(fileInput);
    }
}

function arquivoSelecionado(input) {
    const arquivo = input.files[0];
    const btnImportar = document.getElementById('btnImportar');
    const arquivoInfo = document.getElementById('arquivo-info');
    const nomeArquivo = document.getElementById('nome-arquivo');
    const tamanhoArquivo = document.getElementById('tamanho-arquivo');
    
    if (arquivo) {
        // Validar tipo de arquivo
        if (!arquivo.name.endsWith('.json')) {
            alert('Por favor, selecione um arquivo JSON válido.');
            input.value = '';
            return;
        }
        
        // Mostrar informações do arquivo
        nomeArquivo.textContent = arquivo.name;
        tamanhoArquivo.textContent = `Tamanho: ${formatarTamanhoArquivo(arquivo.size)}`;
        
        arquivoInfo.classList.remove('d-none');
        btnImportar.disabled = false;
    } else {
        arquivoInfo.classList.add('d-none');
        btnImportar.disabled = true;
    }
}

function formatarTamanhoArquivo(bytes) {
    const sizes = ['Bytes', 'KB', 'MB', 'GB'];
    if (bytes === 0) return '0 Byte';
    const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));
    return Math.round(bytes / Math.pow(1024, i) * 100) / 100 + ' ' + sizes[i];
}

function gerarBackup() {
    const statusDiv = document.getElementById('statusBackup');
    const progressBar = document.getElementById('progressBackup');
    const textoStatus = document.getElementById('textoStatusBackup');
    
    statusDiv.classList.remove('d-none');
    
    // Simular progresso
    let progress = 0;
    const interval = setInterval(() => {
        progress += 10;
        progressBar.style.width = progress + '%';
        
        if (progress <= 30) {
            textoStatus.textContent = 'Coletando dados das lojas...';
        } else if (progress <= 60) {
            textoStatus.textContent = 'Exportando formulários...';
        } else if (progress <= 90) {
            textoStatus.textContent = 'Comprimindo auditorias...';
        } else {
            textoStatus.textContent = 'Finalizando backup...';
        }
        
        if (progress >= 100) {
            clearInterval(interval);
            textoStatus.textContent = 'Backup concluído! Download iniciando...';
            
            // Iniciar download
            setTimeout(() => {
                window.location.href = '/cli/backup/exportar';
                statusDiv.classList.add('d-none');
                progressBar.style.width = '0%';
            }, 1000);
        }
    }, 200);
}

// Interceptar submit do formulário de importação
document.getElementById('formImportacao').addEventListener('submit', function(e) {
    e.preventDefault();
    
    const modal = new bootstrap.Modal(document.getElementById('modalConfirmacaoImportacao'));
    modal.show();
});

document.getElementById('confirmarImportacao').addEventListener('click', function() {
    const modal = bootstrap.Modal.getInstance(document.getElementById('modalConfirmacaoImportacao'));
    modal.hide();
    
    // Mostrar progresso
    const statusDiv = document.getElementById('statusImportacao');
    const progressBar = document.getElementById('progressImportacao');
    const textoStatus = document.getElementById('textoStatusImportacao');
    
    statusDiv.classList.remove('d-none');
    
    // Simular progresso da importação
    let progress = 0;
    const interval = setInterval(() => {
        progress += 15;
        progressBar.style.width = progress + '%';
        
        if (progress <= 25) {
            textoStatus.textContent = 'Validando arquivo de backup...';
        } else if (progress <= 50) {
            textoStatus.textContent = 'Limpando dados existentes...';
        } else if (progress <= 75) {
            textoStatus.textContent = 'Importando novos dados...';
        } else {
            textoStatus.textContent = 'Finalizando importação...';
        }
        
        if (progress >= 100) {
            clearInterval(interval);
            
            // Submeter o formulário real
            document.getElementById('formImportacao').submit();
        }
    }, 300);
});

// Carregar histórico de backups
function carregarHistorico() {
    // Simular dados de histórico (em implementação real, viria de API)
    const historico = [
        {
            data: '2024-03-15 10:30',
            operacao: 'Backup',
            usuario: 'Admin Sistema',
            status: 'Sucesso',
            detalhes: '1.245 registros exportados'
        },
        {
            data: '2024-03-10 14:20',
            operacao: 'Importação',
            usuario: 'Admin Sistema',
            status: 'Sucesso',
            detalhes: '892 registros importados'
        }
    ];
    
    const tbody = document.getElementById('historicoBackups');
    const semHistorico = document.getElementById('semHistorico');
    
    if (historico.length === 0) {
        semHistorico.classList.remove('d-none');
        return;
    }
    
    semHistorico.classList.add('d-none');
    
    tbody.innerHTML = historico.map(item => `
        <tr>
            <td>${item.data}</td>
            <td>
                <span class="badge bg-${item.operacao === 'Backup' ? 'success' : 'primary'}">
                    <i class="fas fa-${item.operacao === 'Backup' ? 'download' : 'upload'} me-1"></i>
                    ${item.operacao}
                </span>
            </td>
            <td>${item.usuario}</td>
            <td>
                <span class="badge bg-${item.status === 'Sucesso' ? 'success' : 'danger'}">
                    ${item.status}
                </span>
            </td>
            <td><small class="text-muted">${item.detalhes}</small></td>
        </tr>
    `).join('');
}

// Carregar histórico ao inicializar
document.addEventListener('DOMContentLoaded', carregarHistorico);
</script>
{% endblock %}

<!-- app/templates/cli/notificacoes.html -->
{% extends "base_cliq.html" %}

{% block title %}Central de Notificações{% endblock %}

{% block head %}
<style>
    .notificacao-card {
        border-left: 4px solid transparent;
        transition: all 0.3s ease;
        cursor: pointer;
    }
    .notificacao-card:hover {
        transform: translateX(5px);
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }
    .notificacao-card.info { border-left-color: #17a2b8; }
    .notificacao-card.success { border-left-color: #28a745; }
    .notificacao-card.warning { border-left-color: #ffc107; }
    .notificacao-card.danger { border-left-color: #dc3545; }
    
    .notificacao-nova {
        background-color: #f8f9ff;
        border-left-width: 6px;
    }
    
    .notificacao-icon {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    .icon-info { background-color: #d1ecf1; color: #0c5460; }
    .icon-success { background-color: #d4edda; color: #155724; }
    .icon-warning { background-color: #fff3cd; color: #856404; }
    .icon-danger { background-color: #f8d7da; color: #721c24; }
</style>
{% endblock %}

{% block content %}
<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="h3 mb-0">
                <i class="fas fa-bell text-primary me-2"></i>
                Central de Notificações
            </h1>
            <p class="text-muted mb-0">Acompanhe todas as atividades e alertas do sistema</p>
        </div>
        <div class="btn-group">
            <button class="btn btn-outline-primary" onclick="marcarTodasLidas()">
                <i class="fas fa-check-double"></i> Marcar Todas como Lidas
            </button>
            <button class="btn btn-outline-secondary" onclick="limparNotificacoes()">
                <i class="fas fa-trash"></i> Limpar Antigas
            </button>
        </div>
    </div>

    <!-- Filtros -->
    <div class="card mb-4">
        <div class="card-body">
            <div class="row">
                <div class="col-md-3">
                    <select class="form-select" id="filtroTipo" onchange="filtrarNotificacoes()">
                        <option value="">Todos os tipos</option>
                        <option value="info">Informação</option>
                        <option value="success">Sucesso</option>
                        <option value="warning">Aviso</option>
                        <option value="danger">Erro</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <select class="form-select" id="filtroStatus" onchange="filtrarNotificacoes()">
                        <option value="">Todos os status</option>
                        <option value="nao_lida">Não lidas</option>
                        <option value="lida">Lidas</option>
                    </select>
                </div>
                <div class="col-md-4">
                    <input type="text" class="form-control" placeholder="Buscar notificações..." 
                           id="filtroTexto" onkeyup="filtrarNotificacoes()">
                </div>
                <div class="col-md-2">
                    <button class="btn btn-outline-secondary w-100" onclick="limparFiltros()">
                        <i class="fas fa-times"></i> Limpar
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Lista de Notificações -->
    <div id="listaNotificacoes">
        {% for notificacao in notificacoes %}
        <div class="card notificacao-card {{ notificacao.tipo }} mb-3 {% if not notificacao.visualizada %}notificacao-nova{% endif %}" 
             data-tipo="{{ notificacao.tipo }}" 
             data-status="{% if notificacao.visualizada %}lida{% else %}nao_lida{% endif %}"
             data-texto="{{ notificacao.titulo.lower() }} {{ notificacao.mensagem.lower() }}"
             onclick="{% if notificacao.link %}window.location.href='{{ notificacao.link }}'{% endif %}">
            <div class="card-body">
                <div class="d-flex align-items-start">
                    <div class="notificacao-icon icon-{{ notificacao.tipo }} me-3">
                        <i class="fas fa-{% if notificacao.tipo == 'info' %}info-circle{% elif notificacao.tipo == 'success' %}check-circle{% elif notificacao.tipo == 'warning' %}exclamation-triangle{% else %}times-circle{% endif %}"></i>
                    </div>
                    
                    <div class="flex-grow-1">
                        <div class="d-flex justify-content-between align-items-start">
                            <h6 class="mb-1">
                                {{ notificacao.titulo }}
                                {% if not notificacao.visualizada %}
                                <span class="badge bg-primary ms-2">Nova</span>
                                {% endif %}
                            </h6>
                            <small class="text-muted">
                                {{ notificacao.data_criacao.strftime('%d/%m/%Y %H:%M') }}
                            </small>
                        </div>
                        
                        <p class="mb-2 text-muted">{{ notificacao.mensagem }}</p>
                        
                        {% if notificacao.link %}
                        <div>
                            <i class="fas fa-external-link-alt text-primary me-1"></i>
                            <span class="text-primary small">Clique para ver detalhes</span>
                        </div>
                        {% endif %}
                    </div>
                </div>
            </div>
        </div>
        {% endfor %}
    </div>
    
    <!-- Mensagem quando não há notificações -->
    <div class="text-center py-5 {% if notificacoes %}d-none{% endif %}" id="semNotificacoes">
        <i class="fas fa-bell-slash fa-4x text-muted mb-3"></i>
        <h4 class="text-muted">Nenhuma notificação encontrada</h4>
        <p class="text-muted">Quando houver atividades importantes, elas aparecerão aqui</p>
    </div>
</div>

<script>
function filtrarNotificacoes() {
    const filtroTipo = document.getElementById('filtroTipo').value;
    const filtroStatus = document.getElementById('filtroStatus').value;
    const filtroTexto = document.getElementById('filtroTexto').value.toLowerCase();
    
    const notificacoes = document.querySelectorAll('.notificacao-card');
    let notificacoesVisiveis = 0;
    
    notificacoes.forEach(notificacao => {
        const tipo = notificacao.dataset.tipo;
        const status = notificacao.dataset.status;
        const texto = notificacao.dataset.texto;
        
        const tipoMatch = !filtroTipo || tipo === filtroTipo;
        const statusMatch = !filtroStatus || status === filtroStatus;
        const textoMatch = !filtroTexto || texto.includes(filtroTexto);
        
        if (tipoMatch && statusMatch && textoMatch) {
            notificacao.style.display = 'block';
            notificacoesVisiveis++;
        } else {
            notificacao.style.display = 'none';
        }
    });
    
    // Mostrar/ocultar mensagem de sem notificações
    document.getElementById('semNotificacoes').classList.toggle('d-none', notificacoesVisiveis > 0);
}

function limparFiltros() {
    document.getElementById('filtroTipo').value = '';
    document.getElementById('filtroStatus').value = '';
    document.getElementById('filtroTexto').value = '';
    filtrarNotificacoes();
}

function marcarTodasLidas() {
    fetch('/cli/api/notificacoes/marcar_lidas', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        }
    })
    .then(response => {
        if (response.ok) {
            // Remover badges "Nova" e classes de não lida
            document.querySelectorAll('.notificacao-nova').forEach(el => {
                el.classList.remove('notificacao-nova');
                el.dataset.status = 'lida';
                const badge = el.querySelector('.badge.bg-primary');
                if (badge) badge.remove();
            });
            
            // Mostrar mensagem de sucesso
            const toast = new bootstrap.Toast(document.createElement('div'));
            // Implementar toast de sucesso
        }
    })
    .catch(error => {
        console.error('Erro ao marcar notificações como lidas:', error);
    });
}

function limparNotificacoes() {
    if (confirm('Deseja realmente limpar as notificações antigas (mais de 30 dias)?')) {
        fetch('/cli/api/notificacoes/limpar_antigas', {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json',
            }
        })
        .then(response => {
            if (response.ok) {
                location.reload();
            }
        })
        .catch(error => {
            console.error('Erro ao limpar notificações:', error);
        });
    }
}

// Atualizar contador de notificações na navbar
function atualizarContadorNotificacoes() {
    fetch('/cli/api/notificacoes/count')
        .then(response => response.json())
        .then(data => {
            const contador = document.querySelector('.notification-count');
            if (contador) {
                contador.textContent = data.count;
                contador.style.display = data.count > 0 ? 'inline' : 'none';
            }
        })
        .catch(error => {
            console.error('Erro ao atualizar contador:', error);
        });
}

// Atualizar contador a cada 30 segundos
setInterval(atualizarContadorNotificacoes, 30000);
</script>
{% endblock %}